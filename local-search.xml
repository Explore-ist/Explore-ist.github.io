<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>开坑：小丑牌源代码解析与使用的算法</title>
    <link href="/2025/07/02/%E5%BC%80%E5%9D%91%EF%BC%9A%E5%B0%8F%E4%B8%91%E7%89%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%9A%84%E7%AE%97%E6%B3%95/"/>
    <url>/2025/07/02/%E5%BC%80%E5%9D%91%EF%BC%9A%E5%B0%8F%E4%B8%91%E7%89%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%9A%84%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>前方还在施工…</p>]]></content>
    
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>源代码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github 常用命令</title>
    <link href="/2025/07/02/git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2025/07/02/git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="前言：git虽然指令多掌握比较乱，但是如果分成使用场景就好多了"><a href="#前言：git虽然指令多掌握比较乱，但是如果分成使用场景就好多了" class="headerlink" title="前言：git虽然指令多掌握比较乱，但是如果分成使用场景就好多了"></a>前言：git虽然指令多掌握比较乱，但是如果分成使用场景就好多了</h2><h2 id="当项目开始："><a href="#当项目开始：" class="headerlink" title="当项目开始："></a>当项目开始：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 在本地目录初始化</span><br>git init<br><span class="hljs-comment"># 添加所有文件并首条提交</span><br>git add .<br>git commit -m <span class="hljs-string">&quot;chore(init): 初始化项目结构&quot;</span><br><br><span class="hljs-comment"># 关联远程仓库</span><br>git remote add origin git@github.com:your_org/your_repo.git<br><br><span class="hljs-comment"># 将 main 分支推送到远端并建立追踪关系</span><br>git push -u origin main<br></code></pre></td></tr></table></figure><h2 id="在日常开发："><a href="#在日常开发：" class="headerlink" title="在日常开发："></a>在日常开发：</h2><pre><code class="hljs">目标：在 feature 分支上并行开发、保持主干稳定</code></pre><h3 id="1-创建并切换分支："><a href="#1-创建并切换分支：" class="headerlink" title="1.创建并切换分支："></a>1.创建并切换分支：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout -b feature/user-login<br></code></pre></td></tr></table></figure><h3 id="2-开发过程中频繁同步主干"><a href="#2-开发过程中频繁同步主干" class="headerlink" title="2.开发过程中频繁同步主干"></a>2.开发过程中频繁同步主干</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切回主干，拉取最新</span><br>git checkout main<br>git pull origin main<br><span class="hljs-comment"># 回到 feature 分支，合并或变基</span><br>git checkout feature/user-login<br>git rebase main         <span class="hljs-comment"># 或 git merge main</span><br><br></code></pre></td></tr></table></figure><h3 id="3-暂存未完成的工作"><a href="#3-暂存未完成的工作" class="headerlink" title="3.暂存未完成的工作"></a>3.暂存未完成的工作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add &lt;file&gt;<br>git stash               <span class="hljs-comment"># 将修改存入“栈顶”</span><br><span class="hljs-comment"># 切分支或拉取之后恢复</span><br>git stash pop<br></code></pre></td></tr></table></figure><h2 id="当功能完成："><a href="#当功能完成：" class="headerlink" title="当功能完成："></a>当功能完成：</h2><h3 id="1-合并到主干："><a href="#1-合并到主干：" class="headerlink" title="1.合并到主干："></a>1.合并到主干：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切回主干</span><br>git checkout main<br><span class="hljs-comment"># 拉取最新，确保主干同步</span><br>git pull origin main<br><span class="hljs-comment"># 合并 feature</span><br>git merge --no-ff feature/user-login -m <span class="hljs-string">&quot;feat(login): 用户登录功能合并&quot;</span><br></code></pre></td></tr></table></figure><h3 id="2-推送到远程"><a href="#2-推送到远程" class="headerlink" title="2.推送到远程"></a>2.推送到远程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin main<br></code></pre></td></tr></table></figure><h3 id="3-删除已完成分支"><a href="#3-删除已完成分支" class="headerlink" title="3.删除已完成分支"></a>3.删除已完成分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -d feature/user-login<br>git push origin --delete feature/user-login<br></code></pre></td></tr></table></figure><h2 id="Pull-Request-代码评审与拉取请求"><a href="#Pull-Request-代码评审与拉取请求" class="headerlink" title="Pull Request:代码评审与拉取请求"></a>Pull Request:代码评审与拉取请求</h2><ul><li>检查后再合并</li></ul><h3 id="1-新建分支，推送"><a href="#1-新建分支，推送" class="headerlink" title="1.新建分支，推送"></a>1.新建分支，推送</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push -u origin feature/user-login<br></code></pre></td></tr></table></figure><h3 id="2-发起mergeRequest"><a href="#2-发起mergeRequest" class="headerlink" title="2.发起mergeRequest"></a>2.发起mergeRequest</h3><h3 id="3-修改后"><a href="#3-修改后" class="headerlink" title="3.修改后:"></a>3.修改后:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 本地调整</span><br>git commit --amend       <span class="hljs-comment"># 修改最后一次提交信息</span><br>git rebase -i main       <span class="hljs-comment"># 清理提交历史</span><br>git push -f origin feature/user-login<br></code></pre></td></tr></table></figure><h2 id="发布与版本管理："><a href="#发布与版本管理：" class="headerlink" title="发布与版本管理："></a>发布与版本管理：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 在主干上</span><br>git checkout main<br>git pull origin main<br><br><span class="hljs-comment"># 创建版本标签</span><br>git tag -a v1.2.0 -m <span class="hljs-string">&quot;release: 发布 v1.2.0，增加用户登录、权限校验功能&quot;</span><br><br><span class="hljs-comment"># 推送标签</span><br>git push origin v1.2.0<br><br></code></pre></td></tr></table></figure><h1 id="避免代码冲突：每天至少同步主干一次，明确分工，一个分支做一件事"><a href="#避免代码冲突：每天至少同步主干一次，明确分工，一个分支做一件事" class="headerlink" title="避免代码冲突：每天至少同步主干一次，明确分工，一个分支做一件事"></a>避免代码冲突：每天至少同步主干一次，明确分工，一个分支做一件事</h1><p>但是你要是还是搞不懂，那就用UGit吧</p>]]></content>
    
    
    
    <tags>
      
      <tag>工作流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo 常用命令</title>
    <link href="/2025/07/02/hexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2025/07/02/hexo-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="第一次使用会用上的："><a href="#第一次使用会用上的：" class="headerlink" title="第一次使用会用上的："></a>第一次使用会用上的：</h2><p>打开cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br>npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h2 id="之后："><a href="#之后：" class="headerlink" title="之后："></a>之后：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new [layout] &lt;title&gt;<br>hexo clean<br>hexo g -f -d<br></code></pre></td></tr></table></figure><p>创建md文件与提交静态网站</p><h2 id="尽量不要使用git，管理会很乱（"><a href="#尽量不要使用git，管理会很乱（" class="headerlink" title="尽量不要使用git，管理会很乱（"></a>尽量不要使用git，管理会很乱（</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">@<span class="hljs-built_in">echo</span> off<br>call hexo clean<br>call hexo g -f -d<br><br>pause<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>工作流</tag>
      
      <tag>网站管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
